<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>python rpc调用FRIDAdemo</title>
    <url>/2020/12/07/1207/</url>
    <content><![CDATA[<h5 id="js代码-s1-js"><a href="#js代码-s1-js" class="headerlink" title="js代码  s1.js"></a>js代码  s1.js</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function main()&#123;</span><br><span class="line">    Java.perform(function()&#123;</span><br><span class="line">        console.log(&quot;hello world!&quot;);</span><br><span class="line">        console.log(&quot;hello2!!!&quot;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setImmediate(main)</span><br></pre></td></tr></table></figure>
<h5 id="python代码"><a href="#python代码" class="headerlink" title="python代码"></a>python代码</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import time</span><br><span class="line">import frida</span><br><span class="line"></span><br><span class="line">device &#x3D; frida.get_device_manager().add_remote_device(&#39;192.168.1.125:8888&#39;)</span><br><span class="line"></span><br><span class="line">print(device.get_frontmost_application())</span><br><span class="line"></span><br><span class="line">pid &#x3D; device.get_frontmost_application().pid</span><br><span class="line">session &#x3D; device.attach(pid)</span><br><span class="line">#</span><br><span class="line">with open(&#39;s1.js&#39;) as f :</span><br><span class="line">    script &#x3D; session.create_script(f.read())</span><br><span class="line">    print(script)</span><br><span class="line">script.load()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>kali环境</title>
    <url>/2020/08/16/Android%E7%94%B5%E8%84%91%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h5 id="1-下载安装kali"><a href="#1-下载安装kali" class="headerlink" title="1.下载安装kali"></a>1.下载安装kali</h5><p>账号 root 密码 root</p>
<h5 id="2-修改时区"><a href="#2-修改时区" class="headerlink" title="2.修改时区"></a>2.修改时区</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dpkg-reconfigure tzdata</span><br><span class="line">然后选择 Asia&#x2F;Shanghai</span><br></pre></td></tr></table></figure>
<h5 id="3-安装中文字体"><a href="#3-安装中文字体" class="headerlink" title="3.安装中文字体"></a>3.安装中文字体</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install xfonts-intl-chinese</span><br><span class="line">apt install ttf-wqy-microhei</span><br></pre></td></tr></table></figure>
<h5 id="4-kali-修改名字"><a href="#4-kali-修改名字" class="headerlink" title="4.kali 修改名字"></a>4.kali 修改名字</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nano &#x2F;etc&#x2F;hostname</span><br><span class="line">修改名称 JRB</span><br><span class="line">ctrl x 退出</span><br></pre></td></tr></table></figure>
<h5 id="5-安装-Android-studio"><a href="#5-安装-Android-studio" class="headerlink" title="5.安装 Android studio"></a>5.安装 Android studio</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">第一步</span><br><span class="line">wget https:&#x2F;&#x2F;redirector.gvt1.com&#x2F;edgedl&#x2F;android&#x2F;studio&#x2F;ide-zips&#x2F;4.0.0.16&#x2F;android-studio-ide-193.6514223-linux.tar.gz</span><br><span class="line">第二步</span><br><span class="line">tar zxvf android-studio-ide-193.6514223-linux.tar.gz</span><br></pre></td></tr></table></figure>
<h5 id="6-安装其他工具"><a href="#6-安装其他工具" class="headerlink" title="6.安装其他工具"></a>6.安装其他工具</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt install tmux jnettop htop</span><br></pre></td></tr></table></figure>
<h5 id="7-kali安装科学"><a href="#7-kali安装科学" class="headerlink" title="7.kali安装科学"></a>7.kali安装科学</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.在 window 的cmd 输入ipconfig 查看 本机地址</span><br><span class="line">  例如看到：</span><br><span class="line">  IPv4 地址 . . . . . . . . . . . . : 192.168.1.100</span><br><span class="line"></span><br><span class="line">2.在 跟目录下 输入 nano &#x2F;etc&#x2F;proxychains.conf</span><br><span class="line">   注释 proxy_dns</span><br><span class="line">   注释 scok4 127.0.0.1 9050</span><br><span class="line">   添加 scok5 192.168.1.100 1080</span><br><span class="line">   ctrl x 退出 </span><br><span class="line">   proxychains curl ip.sb</span><br><span class="line">   ping 192.168.1.12  # 检查ip</span><br><span class="line">   telnet 192.168.1.12 1080  # 检查端口</span><br></pre></td></tr></table></figure>
<h5 id="8-第一个app安装"><a href="#8-第一个app安装" class="headerlink" title="8.第一个app安装"></a>8.第一个app安装</h5><p>cd android-studio/bin/<br>./studio.sh<br>安装 过程省略<br>等待同步</p>
<h5 id="9-安装platform-tools-启动第一个项目"><a href="#9-安装platform-tools-启动第一个项目" class="headerlink" title="9.安装platform-tools,启动第一个项目"></a>9.安装platform-tools,启动第一个项目</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#1.下载链接</span><br><span class="line">wget https:&#x2F;&#x2F;dl.google.com&#x2F;android&#x2F;repository&#x2F;platform-tools-latest-linux.zip</span><br><span class="line">#2. 解压</span><br><span class="line">7z x platform-tools-latest-linux.zip </span><br><span class="line">#3.设置环境变量</span><br><span class="line">nano ~&#x2F;.bashrc</span><br><span class="line">PATH&#x3D;$PATH:&#x2F;root&#x2F;platform-tools&#x2F;</span><br><span class="line">ctrl x 退出</span><br><span class="line">source ~&#x2F;.bashrc</span><br><span class="line">#4.连接手机</span><br><span class="line">adb connect 192.168.1.11:5555</span><br><span class="line">#5.查看状态</span><br><span class="line">adb devices</span><br><span class="line">#6.启动项目</span><br><span class="line">Android stduio启动项目 run</span><br><span class="line">就能看到连接手机 出现hello world！</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/01/02/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>adb笔记</title>
    <url>/2020/08/16/adb/</url>
    <content><![CDATA[<h5 id="1、查询已连接设备-模拟器"><a href="#1、查询已连接设备-模拟器" class="headerlink" title="1、查询已连接设备/模拟器"></a>1、查询已连接设备/模拟器</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb devices</span><br></pre></td></tr></table></figure>
<h5 id="2、指定设备获取屏幕分辨率"><a href="#2、指定设备获取屏幕分辨率" class="headerlink" title="2、指定设备获取屏幕分辨率"></a>2、指定设备获取屏幕分辨率</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb -s 设备号 shell wm size</span><br></pre></td></tr></table></figure>
<h5 id="3、给指定设备安装应用"><a href="#3、给指定设备安装应用" class="headerlink" title="3、给指定设备安装应用"></a>3、给指定设备安装应用</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb -s 设备号 install test.apk</span><br></pre></td></tr></table></figure>
<h5 id="4、启动-adb-server-命令"><a href="#4、启动-adb-server-命令" class="headerlink" title="4、启动 adb server 命令"></a>4、启动 adb server 命令</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb start-server</span><br></pre></td></tr></table></figure>
<h5 id="5、停止-adb-server-命令"><a href="#5、停止-adb-server-命令" class="headerlink" title="5、停止 adb server 命令"></a>5、停止 adb server 命令</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb kill-server</span><br></pre></td></tr></table></figure>
<h5 id="6、查看adb版本"><a href="#6、查看adb版本" class="headerlink" title="6、查看adb版本"></a>6、查看adb版本</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb version</span><br></pre></td></tr></table></figure>
<h5 id="7、指定-adb-server-的网络端口"><a href="#7、指定-adb-server-的网络端口" class="headerlink" title="7、指定 adb server 的网络端口"></a>7、指定 adb server 的网络端口</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb -P &lt;port&gt; start-server</span><br></pre></td></tr></table></figure>
<h5 id="8、通过-IP-地址连接设备"><a href="#8、通过-IP-地址连接设备" class="headerlink" title="8、通过 IP 地址连接设备"></a>8、通过 IP 地址连接设备</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb connect &lt;device-ip-address&gt;</span><br></pre></td></tr></table></figure>
<h5 id="9、断开无线连接"><a href="#9、断开无线连接" class="headerlink" title="9、断开无线连接"></a>9、断开无线连接</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb disconnect &lt;device-ip-address&gt;</span><br></pre></td></tr></table></figure>
<h5 id="10、查看所有应用"><a href="#10、查看所有应用" class="headerlink" title="10、查看所有应用"></a>10、查看所有应用</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell pm list packages</span><br></pre></td></tr></table></figure>
<h5 id="11、查看系统应用"><a href="#11、查看系统应用" class="headerlink" title="11、查看系统应用"></a>11、查看系统应用</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell pm list packages -s</span><br></pre></td></tr></table></figure>
<h5 id="12、查看第三方应用"><a href="#12、查看第三方应用" class="headerlink" title="12、查看第三方应用"></a>12、查看第三方应用</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell pm list packages -3</span><br></pre></td></tr></table></figure>
<h5 id="13、卸载应用（-表示应用的包名，-k-参数可选，表示卸载应用但保留数据和缓存目录。）"><a href="#13、卸载应用（-表示应用的包名，-k-参数可选，表示卸载应用但保留数据和缓存目录。）" class="headerlink" title="13、卸载应用（ 表示应用的包名，-k 参数可选，表示卸载应用但保留数据和缓存目录。）"></a>13、卸载应用（<packagename> 表示应用的包名，-k 参数可选，表示卸载应用但保留数据和缓存目录。）</packagename></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb uninstall [-k] &lt;packagename&gt;</span><br></pre></td></tr></table></figure>
<h5 id="14、清除应用数据与缓存"><a href="#14、清除应用数据与缓存" class="headerlink" title="14、清除应用数据与缓存"></a>14、清除应用数据与缓存</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell pm clear &lt;packagename&gt;</span><br></pre></td></tr></table></figure>
<h5 id="15、复制设备里的文件到电脑"><a href="#15、复制设备里的文件到电脑" class="headerlink" title="15、复制设备里的文件到电脑"></a>15、复制设备里的文件到电脑</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb pull &lt;设备里的文件路径&gt; [电脑上的目录]</span><br></pre></td></tr></table></figure>
<h5 id="16、复制电脑里的文件到设备"><a href="#16、复制电脑里的文件到设备" class="headerlink" title="16、复制电脑里的文件到设备"></a>16、复制电脑里的文件到设备</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb push &lt;电脑上的文件路径&gt; &lt;设备里的目录&gt;</span><br></pre></td></tr></table></figure>
<h5 id="17、电源键"><a href="#17、电源键" class="headerlink" title="17、电源键"></a>17、电源键</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell input keyevent 26</span><br></pre></td></tr></table></figure>
<h5 id="18、菜单键"><a href="#18、菜单键" class="headerlink" title="18、菜单键"></a>18、菜单键</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell input keyevent 82</span><br></pre></td></tr></table></figure>
<h5 id="19、HOME-键"><a href="#19、HOME-键" class="headerlink" title="19、HOME 键"></a>19、HOME 键</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell input keyevent 3</span><br></pre></td></tr></table></figure>
<h5 id="20、返回键"><a href="#20、返回键" class="headerlink" title="20、返回键"></a>20、返回键</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell input keyevent 4</span><br></pre></td></tr></table></figure>
<h5 id="21、增加音量"><a href="#21、增加音量" class="headerlink" title="21、增加音量"></a>21、增加音量</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell input keyevent 24</span><br></pre></td></tr></table></figure>
<h5 id="22、降低音量"><a href="#22、降低音量" class="headerlink" title="22、降低音量"></a>22、降低音量</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell input keyevent 25</span><br></pre></td></tr></table></figure>
<h5 id="23、静音"><a href="#23、静音" class="headerlink" title="23、静音"></a>23、静音</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell input keyevent 164</span><br></pre></td></tr></table></figure>
<h5 id="24、播放-暂停"><a href="#24、播放-暂停" class="headerlink" title="24、播放/暂停"></a>24、播放/暂停</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell input keyevent 85</span><br></pre></td></tr></table></figure>
<h5 id="25、停止播放"><a href="#25、停止播放" class="headerlink" title="25、停止播放"></a>25、停止播放</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell input keyevent 86</span><br></pre></td></tr></table></figure>
<h5 id="26、播放下一首"><a href="#26、播放下一首" class="headerlink" title="26、播放下一首"></a>26、播放下一首</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell input keyevent 87</span><br></pre></td></tr></table></figure>
<h5 id="27、播放上一首"><a href="#27、播放上一首" class="headerlink" title="27、播放上一首"></a>27、播放上一首</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell input keyevent 88</span><br></pre></td></tr></table></figure>
<h5 id="28、恢复播放"><a href="#28、恢复播放" class="headerlink" title="28、恢复播放"></a>28、恢复播放</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell input keyevent 126</span><br></pre></td></tr></table></figure>
<h5 id="29、暂停播放"><a href="#29、暂停播放" class="headerlink" title="29、暂停播放"></a>29、暂停播放</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell input keyevent 127</span><br></pre></td></tr></table></figure>
<h5 id="30、滑动解锁（参数-300-1000-300-500-分别表示起始点x坐标-起始点y坐标-结束点x坐标-结束点y坐标。）"><a href="#30、滑动解锁（参数-300-1000-300-500-分别表示起始点x坐标-起始点y坐标-结束点x坐标-结束点y坐标。）" class="headerlink" title="30、滑动解锁（参数 300 1000 300 500 分别表示起始点x坐标 起始点y坐标 结束点x坐标 结束点y坐标。）"></a>30、滑动解锁（参数 300 1000 300 500 分别表示起始点x坐标 起始点y坐标 结束点x坐标 结束点y坐标。）</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell input swipe 300 1000 300 500</span><br></pre></td></tr></table></figure>
<h5 id="31、输入文本"><a href="#31、输入文本" class="headerlink" title="31、输入文本"></a>31、输入文本</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell input text hello</span><br></pre></td></tr></table></figure>
<h5 id="32、清空日志"><a href="#32、清空日志" class="headerlink" title="32、清空日志"></a>32、清空日志</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb logcat -c</span><br></pre></td></tr></table></figure>
<h5 id="33、查看设备型号"><a href="#33、查看设备型号" class="headerlink" title="33、查看设备型号"></a>33、查看设备型号</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell getprop ro.product.model</span><br></pre></td></tr></table></figure>
<h5 id="34、电池状况"><a href="#34、电池状况" class="headerlink" title="34、电池状况"></a>34、电池状况</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell dumpsys battery</span><br></pre></td></tr></table></figure>
<h5 id="35、屏幕分辨率"><a href="#35、屏幕分辨率" class="headerlink" title="35、屏幕分辨率"></a>35、屏幕分辨率</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell wm size</span><br></pre></td></tr></table></figure>
<h5 id="36、屏幕密度"><a href="#36、屏幕密度" class="headerlink" title="36、屏幕密度"></a>36、屏幕密度</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell wm density</span><br></pre></td></tr></table></figure>
<h5 id="37、显示屏参数"><a href="#37、显示屏参数" class="headerlink" title="37、显示屏参数"></a>37、显示屏参数</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell dumpsys window displays</span><br></pre></td></tr></table></figure>
<h5 id="38、查看Android-系统版本"><a href="#38、查看Android-系统版本" class="headerlink" title="38、查看Android 系统版本"></a>38、查看Android 系统版本</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell getprop ro.build.version.release</span><br></pre></td></tr></table></figure>
<h5 id="39、查看IP-地址"><a href="#39、查看IP-地址" class="headerlink" title="39、查看IP 地址"></a>39、查看IP 地址</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell ifconfig | grep Mask</span><br></pre></td></tr></table></figure>
<h5 id="40、Mac-地址"><a href="#40、Mac-地址" class="headerlink" title="40、Mac 地址"></a>40、Mac 地址</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell cat &#x2F;sys&#x2F;class&#x2F;net&#x2F;wlan0&#x2F;address</span><br></pre></td></tr></table></figure>
<h5 id="41、CPU-信息"><a href="#41、CPU-信息" class="headerlink" title="41、CPU 信息"></a>41、CPU 信息</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell cat &#x2F;proc&#x2F;cpuinfo</span><br></pre></td></tr></table></figure>
<h5 id="42、内存信息"><a href="#42、内存信息" class="headerlink" title="42、内存信息"></a>42、内存信息</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell cat &#x2F;proc&#x2F;meminfo</span><br></pre></td></tr></table></figure>
<h5 id="43、使用-Monkey-进行压力测试（表示向-指定的应用程序发送-500-个伪随机事件。）"><a href="#43、使用-Monkey-进行压力测试（表示向-指定的应用程序发送-500-个伪随机事件。）" class="headerlink" title="43、使用 Monkey 进行压力测试（表示向  指定的应用程序发送 500 个伪随机事件。）"></a>43、使用 Monkey 进行压力测试（表示向 <packagename> 指定的应用程序发送 500 个伪随机事件。）</packagename></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell monkey -p &lt;packagename&gt; -v 500</span><br></pre></td></tr></table></figure>
<h5 id="44、查看进程"><a href="#44、查看进程" class="headerlink" title="44、查看进程"></a>44、查看进程</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell ps</span><br></pre></td></tr></table></figure>
<h5 id="45、查看实时资源占用情况"><a href="#45、查看实时资源占用情况" class="headerlink" title="45、查看实时资源占用情况"></a>45、查看实时资源占用情况</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb shell top</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>adb</tag>
      </tags>
  </entry>
  <entry>
    <title>APK去广告升级</title>
    <url>/2020/10/28/APK1/</url>
    <content><![CDATA[<h5 id="jadx安装"><a href="#jadx安装" class="headerlink" title="jadx安装"></a>jadx安装</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">proxychains wget https:&#x2F;&#x2F;github.com&#x2F;skylot&#x2F;jadx&#x2F;releases&#x2F;download&#x2F;v1.1.0&#x2F;jadx-1.1.0.zip</span><br><span class="line">mkdir jadx</span><br><span class="line">mv jadx-1.1.0.zip jadx</span><br><span class="line">cd jadx&#x2F;</span><br><span class="line">7z x jadx-1.1.0.zip </span><br><span class="line">cd bin&#x2F;</span><br><span class="line">.&#x2F;jadx-gui</span><br></pre></td></tr></table></figure>
<h5 id="去缓存"><a href="#去缓存" class="headerlink" title="去缓存"></a>去缓存</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;root&#x2F;.cache&#x2F;vmware</span><br><span class="line">rm -rf *</span><br></pre></td></tr></table></figure>
<h5 id="jeb安装"><a href="#jeb安装" class="headerlink" title="jeb安装"></a>jeb安装</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7z x jeb-pro-3.19.1.202005071620_pwd_ilbtcdnwiuypbzeo_sn_#61641164873316763_.zip</span><br><span class="line">.&#x2F;jeb_linux.sh</span><br><span class="line">输入密码  ilbtcdnwiuypbzeo</span><br><span class="line">python jebKeygen.py （python2）</span><br><span class="line">JEB License Key: 1596996870285484043Z1660229094</span><br></pre></td></tr></table></figure>
<h5 id="010安装"><a href="#010安装" class="headerlink" title="010安装"></a>010安装</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">proxychains wget https:&#x2F;&#x2F;www.sweetscape.com&#x2F;download&#x2F;010EditorLinux64Installer.tar.gz</span><br><span class="line">tar zxvf 010EditorLinux64Installer.tar.gz</span><br><span class="line">.&#x2F;010EditorLinux64Installer</span><br></pre></td></tr></table></figure>
<h5 id="软连接（注意是不是30-0-1可能不是）"><a href="#软连接（注意是不是30-0-1可能不是）" class="headerlink" title="软连接（注意是不是30.0.1可能不是）"></a>软连接（注意是不是30.0.1可能不是）</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ln -s &#x2F;root&#x2F;Desktop&#x2F;android-studio&#x2F;jre&#x2F;bin&#x2F;jarsigner &#x2F;usr&#x2F;bin</span><br><span class="line">ln -s &#x2F;root&#x2F;Android&#x2F;Sdk&#x2F;build-tools&#x2F;30.0.1&#x2F;aapt &#x2F;usr&#x2F;bin</span><br><span class="line">ln -s &#x2F;root&#x2F;Android&#x2F;Sdk&#x2F;build-tools&#x2F;30.0.1&#x2F;aapt2 &#x2F;usr&#x2F;bin</span><br></pre></td></tr></table></figure>
<h5 id="安装-akptool"><a href="#安装-akptool" class="headerlink" title="安装 akptool"></a>安装 akptool</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mv apktool.txt apktool</span><br><span class="line">mv apktool* &#x2F;usr&#x2F;local&#x2F;bin&#x2F;</span><br><span class="line">chmod 777 apktool*</span><br></pre></td></tr></table></figure>
<h4 id="去升级，重打包"><a href="#去升级，重打包" class="headerlink" title="去升级，重打包"></a>去升级，重打包</h4><h5 id="1-解包"><a href="#1-解包" class="headerlink" title="1.解包"></a>1.解包</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apktool d zhibo.apk</span><br></pre></td></tr></table></figure>
<p>（查找过程省略，以后补修改smail）</p>
<h5 id="2-打包"><a href="#2-打包" class="headerlink" title="2.打包"></a>2.打包</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apktool b zhibo&#x2F;</span><br></pre></td></tr></table></figure>
<h5 id="3-进入生成新apk的文件夹"><a href="#3-进入生成新apk的文件夹" class="headerlink" title="3.进入生成新apk的文件夹"></a>3.进入生成新apk的文件夹</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;dist</span><br></pre></td></tr></table></figure>
<h5 id="4-生成签名"><a href="#4-生成签名" class="headerlink" title="4.生成签名"></a>4.生成签名</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">keytool -genkey -alias abc.keystore -keyalg RSA -validity 20000 -keystore abc.keystore</span><br></pre></td></tr></table></figure>
<h5 id="5-给apk签名"><a href="#5-给apk签名" class="headerlink" title="5.给apk签名"></a>5.给apk签名</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jarsigner  -verbose -keystore abc.keystore -signedjar testx.apk zhibo.apk abc.keystore</span><br></pre></td></tr></table></figure>
<h5 id="卸载原手机apk"><a href="#卸载原手机apk" class="headerlink" title="卸载原手机apk"></a>卸载原手机apk</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pm uninstall com.hd.zhibo</span><br></pre></td></tr></table></figure>
<h5 id="重新安装新apk"><a href="#重新安装新apk" class="headerlink" title="重新安装新apk"></a>重新安装新apk</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb install testx.apk</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>frida 环境</title>
    <url>/2020/10/13/pyenv/</url>
    <content><![CDATA[<h4 id="pyenv-安装与简单使用"><a href="#pyenv-安装与简单使用" class="headerlink" title="pyenv 安装与简单使用"></a>pyenv 安装与简单使用</h4><h5 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;pyenv&#x2F;pyenv.git ~&#x2F;.pyenv</span><br></pre></td></tr></table></figure>
<h5 id="设置变量环境"><a href="#设置变量环境" class="headerlink" title="设置变量环境"></a>设置变量环境</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &#39;export PYENV_ROOT&#x3D;&quot;$HOME&#x2F;.pyenv&quot;&#39; &gt;&gt; ~&#x2F;.bashrc</span><br><span class="line">echo &#39;export PATH&#x3D;&quot;$PYENV_ROOT&#x2F;bin:$PATH&quot;&#39; &gt;&gt; ~&#x2F;.bashrc</span><br><span class="line"></span><br><span class="line">echo -e &#39;if command -v pyenv 1&gt;&#x2F;dev&#x2F;null 2&gt;&amp;1; then\n  eval &quot;$(pyenv init -)&quot;\nfi&#39; &gt;&gt; ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure>
<h5 id="配置Python前置条件"><a href="#配置Python前置条件" class="headerlink" title="配置Python前置条件"></a>配置Python前置条件</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get install gcc-9-base libgcc-9-dev libc6-dev</span><br><span class="line"></span><br><span class="line">sudo apt-get update; sudo apt-get install --no-install-recommends make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev</span><br></pre></td></tr></table></figure>
<h5 id="查看所有pyenv，python版本"><a href="#查看所有pyenv，python版本" class="headerlink" title="查看所有pyenv，python版本"></a>查看所有pyenv，python版本</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pyenv versions</span><br></pre></td></tr></table></figure>
<h5 id="查看当前pyhton"><a href="#查看当前pyhton" class="headerlink" title="查看当前pyhton"></a>查看当前pyhton</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python --version</span><br><span class="line">pyenv version</span><br></pre></td></tr></table></figure>
<h5 id="下载python"><a href="#下载python" class="headerlink" title="下载python"></a>下载python</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pyenv install 3.8.0</span><br></pre></td></tr></table></figure>
<h5 id="切换python"><a href="#切换python" class="headerlink" title="切换python"></a>切换python</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pyenv local 3.8.0</span><br></pre></td></tr></table></figure>
<h4 id="frida特定版本安装"><a href="#frida特定版本安装" class="headerlink" title="frida特定版本安装"></a>frida特定版本安装</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">proxychains pip install frida&#x3D;&#x3D;12.8.0</span><br><span class="line">proxychains pip install frida-tools&#x3D;&#x3D;5.3.0</span><br><span class="line">proxychains pip install objection&#x3D;&#x3D;1.8.4</span><br></pre></td></tr></table></figure>
<h5 id="node安装"><a href="#node安装" class="headerlink" title="node安装"></a>node安装</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt-get install -y nodejs</span><br><span class="line">apt-get install npm</span><br></pre></td></tr></table></figure>
<h5 id="vscode安装"><a href="#vscode安装" class="headerlink" title="vscode安装"></a>vscode安装</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;code.visualstudio.com&#x2F;</span><br><span class="line">dpkg -i code_1.50.0-1602051089_amd64.deb</span><br></pre></td></tr></table></figure>
<h5 id="frida环境安装"><a href="#frida环境安装" class="headerlink" title="frida环境安装"></a>frida环境安装</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;oleavr&#x2F;frida-agent-example.git</span><br><span class="line">cd frida-agent-example&#x2F;</span><br><span class="line">npm install</span><br><span class="line">frida -U -f com.example.android --no-pause -l _agent.js</span><br><span class="line"></span><br><span class="line">ctrc + 左上角~  会出现terminal</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>markdowm一些用法</title>
    <url>/2020/01/03/markdowm/</url>
    <content><![CDATA[<p>1.标题 可以用等于号= 减号- 井号# 来表示：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这是一级标题</span><br><span class="line">========</span><br><span class="line">这是二级标题</span><br><span class="line">-------</span><br><span class="line"></span><br><span class="line"><span class="section"># 这是一级标题</span></span><br><span class="line"><span class="section">## 这是二级标题</span></span><br><span class="line"><span class="section">### 这是三级标题</span></span><br><span class="line"><span class="section">#### 这是四级标题</span></span><br><span class="line"><span class="section">##### 这是五级标题</span></span><br><span class="line"><span class="section">###### 这是六级标题</span></span><br></pre></td></tr></table></figure></p>
<h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h1 id="这是一级标题-1"><a href="#这是一级标题-1" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题-1"><a href="#这是二级标题-1" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><p>2.字体</p>
<p>(1)斜体可以用星号<em> 英文下划线_ HTML符号&lt;i&gt; 表示：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="emphasis">*斜体1*</span></span><br><span class="line"><span class="emphasis">_斜体2_</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">i</span>&gt;</span></span>斜体3<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
</em>斜体1*<br><em>斜体2</em><br><i>斜体3</i></p>
<p>(2)粗体可以用两星号<strong> 英文双下划线__ HTML符号&lt;b&gt;  &lt;strong&gt;表示：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**粗体1**</span></span><br><span class="line"><span class="strong">__粗体2__</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>粗体3<span class="xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">strong</span>&gt;</span></span>粗体4<span class="xml"><span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
</strong>粗体1**<br><strong>粗体2</strong><br><b>粗体3</b><br><strong>粗体4</strong></p>
<p>(3)斜粗体可以用三个星号<strong><em> 三个下划线<em>_</em> HTML组合来表示：<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">***斜粗体1**</span>*</span><br><span class="line"> <span class="strong">___斜粗体2__</span>_</span><br></pre></td></tr></table></figure>
   </em></strong>斜粗体1<em>*</em><br>   <strong><em>斜粗体2</em></strong></p>
<p>3.删除线，~表示<br><code>~~删除线~~</code><br><del>删除线</del></p>
<p>4.下划线用，HTML标签&lt;u&gt;表示<br><code>&lt;u&gt;下滑线&lt;/u&gt;</code><br><u>下滑线</u></p>
<p>5.列表</p>
<p>(1)无序列表可以用星号* 加号+ 减号- 表示<br>  <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">* </span>第一项</span><br><span class="line"><span class="bullet">+ </span>第二项</span><br><span class="line"><span class="bullet">- </span>第三项</span><br></pre></td></tr></table></figure></p>
<ul>
<li>第一项</li>
</ul>
<ul>
<li>第二项</li>
</ul>
<ul>
<li>第三项</li>
</ul>
<p>(2)有序列表用数字加. 表示<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>有序列表1</span><br><span class="line"><span class="bullet">2. </span>有序列表2</span><br></pre></td></tr></table></figure></p>
<ol>
<li>有序列表1</li>
<li>有序列表2</li>
</ol>
<p>(3)镶嵌列表<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>第一项：</span><br><span class="line"><span class="bullet">  	- </span>子项1</span><br><span class="line"><span class="bullet">  	+ </span>子项2</span><br><span class="line"><span class="bullet">  	* </span>子项3</span><br></pre></td></tr></table></figure></p>
<ol>
<li>第一项：<ul>
<li>子项1</li>
</ul>
<ul>
<li>子项2</li>
</ul>
<ul>
<li>子项3</li>
</ul>
</li>
</ol>
<p>6.引用 &gt; 表示<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&gt;第一层引用</span><br><span class="line">&gt;&gt;第二层引用</span><br><span class="line">&gt;&gt;&gt;第三层引用</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>第一层引用</p>
<blockquote>
<p>第二层引用</p>
<blockquote>
<p>第三层引用</p>
</blockquote>
</blockquote>
</blockquote>
<p>7.代码格式化` 或者``` 表示<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">`Hello World!`</span></span><br></pre></td></tr></table></figure><br>  Hello World!</p>
<p>8.链接 [链接名称](网址) 或者&lt;链接网址&gt;<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这是一个百度链接[<span class="string">百度链接</span>](<span class="link">https://www.baidu.com/</span>)</span><br><span class="line">也可以直接用链接</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">https:</span>//<span class="attr">www.baidu.com</span>/&gt;</span></span></span><br></pre></td></tr></table></figure><br>这是一个百度链接<a href="https://www.baidu.com/" target="_blank" rel="noopener">百度链接</a><br>也可以直接用链接<br><a href="https://www.baidu.com/" target="_blank" rel="noopener">https://www.baidu.com/</a></p>
<h3 id="高级链接"><a href="#高级链接" class="headerlink" title="高级链接"></a>高级链接</h3><p>用1表示链接<a href="https://www.baidu.com/" target="_blank" rel="noopener">百度链接</a><br>可以用cnglogs表示连接<a href="https://www.cnblogs.com/" target="_blank" rel="noopener">博客园</a></p>
<p>9.图片插入 可以！[alt](图片地址)<br><img src="https://github.com/jinrb/jinrb.github.io/blob/master/css/images/kobe.jpg" alt="科比老大"><br><img src="https://github.com/jinrb/jinrb.github.io/blob/master/css/images/kobe.jpg"></p>
<p>10.表格<br>表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">|  表头   | 表头  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">| 单元格  | 单元格 |</span><br></pre></td></tr></table></figure><br>|  表头   | 表头  |<br>|  ——  | ——  |<br>| 单元格  | 单元格 |<br>| 单元格  | 单元格 |</p>
<p>表格的对齐方式</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">左对齐</th>
<th style="text-align:right">右对齐</th>
<th style="text-align:center">居中对齐</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">单元格</td>
<td style="text-align:right">单元格</td>
<td style="text-align:center">单元格</td>
</tr>
<tr>
<td style="text-align:left">单元格</td>
<td style="text-align:right">单元格</td>
<td style="text-align:center">单元格</td>
</tr>
</tbody>
</table>
</div>
<p>11.markdown 转译这些符号前面加上反斜杠来帮助插入普通的符号<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">`   反引号</span><br><span class="line"><span class="bullet">*   </span>星号</span><br><span class="line">_   下划线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  小括号</span><br><span class="line"><span class="section">#   井字号</span></span><br><span class="line"><span class="bullet">+   </span>加号</span><br><span class="line"><span class="bullet">-   </span>减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   感叹号</span><br></pre></td></tr></table></figure><br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">代码</span><br><span class="line">\\   反斜线</span><br><span class="line">\`   反引号</span><br><span class="line">\*   星号</span><br><span class="line">\_   下划线</span><br><span class="line">\&#123;\&#125;  花括号</span><br><span class="line">\[\]  方括号</span><br><span class="line">\(\)  小括号</span><br><span class="line">\#   井字号</span><br><span class="line">\+   加号</span><br><span class="line">\-   减号</span><br><span class="line">\.   英文句点</span><br><span class="line">\!   感叹号</span><br></pre></td></tr></table></figure><br>\   反斜线<br>`   反引号<br>*   星号<br>_   下划线<br>{}  花括号<br>[]  方括号<br>()  小括号<br>#   井字号<br>+   加号<br>-   减号<br>.   英文句点<br>!   感叹号</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
  </entry>
  <entry>
    <title>sailfish刷机</title>
    <url>/2020/12/03/%E5%88%B7%E6%9C%BA/</url>
    <content><![CDATA[<h4 id="环境：-pixel-andriod-8-1-0-twrp3-3-Magisk-Frida"><a href="#环境：-pixel-andriod-8-1-0-twrp3-3-Magisk-Frida" class="headerlink" title="环境： pixel+ andriod 8.1.0 + twrp3.3 + Magisk + Frida"></a>环境： pixel+ andriod 8.1.0 + twrp3.3 + Magisk + Frida</h4><h5 id="1-刷andriod-8-1-0-："><a href="#1-刷andriod-8-1-0-：" class="headerlink" title="1.刷andriod 8.1.0  ："></a>1.刷andriod 8.1.0  ：</h5><p>  系统镜像Factory Images for Nexus and Pixel Devices地址<br>  <a href="https://developers.google.com/android/images#sailfish" target="_blank" rel="noopener">https://developers.google.com/android/images#sailfish</a><br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. wget https:&#x2F;&#x2F;dl.google.com&#x2F;dl&#x2F;android&#x2F;aosp&#x2F;sailfish-opm1.171019.011-factory-56d15350.zip</span><br><span class="line"></span><br><span class="line">2. 7z x  sailfish-opm1.171019.011-factory-56d15350.zip</span><br><span class="line"></span><br><span class="line">3. cd sailfish-opm1.171019.011-factory-56d15350</span><br><span class="line"></span><br><span class="line">4. .&#x2F;flash-all.sh（需按照fastboot）</span><br></pre></td></tr></table></figure></p>
<h5 id="2-刷twrp，Magisk"><a href="#2-刷twrp，Magisk" class="headerlink" title="2.刷twrp，Magisk"></a>2.刷twrp，Magisk</h5><p><a href="https://dl.twrp.me/sailfish/" target="_blank" rel="noopener">https://dl.twrp.me/sailfish/</a><br>将 twrp 安装到手机（Magisk 同理）<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. adb push twrp-pixel-installer-sailfish-3.3.0-0.zip &#x2F;sdcard</span><br><span class="line"></span><br><span class="line">2.  将手机设置为fastboot模式，并且按动音量键切换至Recovery模式</span><br><span class="line"></span><br><span class="line">3.  fastboot boot twrp-3.3.0-0-sailfish.img</span><br><span class="line"></span><br><span class="line">4.  滑动下方的滑块，找到zip包，点击它（遇到坑，在sdcard下找不到zip包，重新push到&#x2F; 目录下）</span><br><span class="line"></span><br><span class="line">5.  点击Reboot System完成twrp的刷入</span><br></pre></td></tr></table></figure></p>
<h5 id="3-Frida-Server-的安装"><a href="#3-Frida-Server-的安装" class="headerlink" title="3.Frida-Server 的安装"></a>3.Frida-Server 的安装</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. adb push &#x2F;frida-server-12.8.0-android-arm64 &#x2F;data&#x2F;local&#x2F;tmp</span><br><span class="line">2. .&#x2F;frida-server-12.8.0-android-arm64</span><br></pre></td></tr></table></figure>
<p>百度网盘环境<br>链接：<a href="https://pan.baidu.com/s/1Jjm-u7kLUQsWqOgQkcvkYQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1Jjm-u7kLUQsWqOgQkcvkYQ</a><br>提取码：jl2f </p>
<h4 id="Android7-1-2-Supersu-Xposed"><a href="#Android7-1-2-Supersu-Xposed" class="headerlink" title="Android7.1.2 + Supersu + Xposed"></a>Android7.1.2 + Supersu + Xposed</h4><h5 id="1-刷机"><a href="#1-刷机" class="headerlink" title="1.刷机"></a>1.刷机</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;dl.google.com&#x2F;dl&#x2F;android&#x2F;aosp&#x2F;sailfish-n2g47o-factory-f2bc8024.zip</span><br><span class="line"></span><br><span class="line">7z x https:&#x2F;&#x2F;dl.google.com&#x2F;dl&#x2F;android&#x2F;aosp&#x2F;sailfish-n2g47o-factory-f2bc8024.zip</span><br><span class="line"></span><br><span class="line">cd sailfish-n2g47o</span><br><span class="line"></span><br><span class="line">.&#x2F;flash-all.sh</span><br></pre></td></tr></table></figure>
<h5 id="2-刷supersu"><a href="#2-刷supersu" class="headerlink" title="2.刷supersu"></a>2.刷supersu</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adb push SR5-SuperSU-v2.82-SR5-20171001224502.zip &#x2F;sdcard&#x2F;</span><br><span class="line">adb reboot bootloader</span><br><span class="line">fastboot boot twrp-3.3.0-0-sailfish.img</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云线上环境的一些操作</title>
    <url>/2020/12/03/%E7%BA%BF%E4%B8%8A%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h5 id="1-服务器-docker安装"><a href="#1-服务器-docker安装" class="headerlink" title="1.服务器 docker安装"></a>1.服务器 docker安装</h5><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">yum -y install yum-utils</span><br><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line">yum list docker-ce</span><br><span class="line">yum install docker-ce</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>
<h5 id="2-服务器svn安装"><a href="#2-服务器svn安装" class="headerlink" title="2.服务器svn安装"></a>2.服务器svn安装</h5><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">yum install subversion</span><br><span class="line">svn checkout svn://code.#####/project_name project_name/</span><br><span class="line">name    password</span><br></pre></td></tr></table></figure>
<h5 id="3-服务器安装python"><a href="#3-服务器安装python" class="headerlink" title="3.服务器安装python"></a>3.服务器安装python</h5><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">wget https://www.python.org/ftp/python/3.7.5/Python-3.7.5.tar.xz</span><br><span class="line">tar -xvJf  Python-3.7.5.tar.xz</span><br><span class="line">yum -y groupinstall "Development tools"</span><br><span class="line">yum -y install zlib*</span><br><span class="line">mkdir /usr/local/python3</span><br><span class="line">cd Python-3.7.5/</span><br><span class="line">./configure --prefix=/usr/local/python3</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">rm -rf /usr/bin/python3</span><br><span class="line">rm -rf /usr/bin/pip3</span><br><span class="line">ln -s /usr/local/python3/bin/python3 /usr/bin/python3</span><br><span class="line">ln -s /usr/local/python3/bin/pip3 /usr/bin/pip3</span><br></pre></td></tr></table></figure>
<h5 id="4-python连接服务器hbase"><a href="#4-python连接服务器hbase" class="headerlink" title="4.python连接服务器hbase"></a>4.python连接服务器hbase</h5><h6 id="1-服务器-Linux-安装环境"><a href="#1-服务器-Linux-安装环境" class="headerlink" title="1.服务器 Linux 安装环境"></a>1.服务器 Linux 安装环境</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0.11.0版本下载地址： wget http:&#x2F;&#x2F;mirrors.hust.edu.cn&#x2F;apache&#x2F;thrift&#x2F;0.11.0&#x2F;thrift-0.11.0.tar.gz</span><br><span class="line">执行如下命令安装Thrift依赖：</span><br><span class="line">yum install automake bison flex g++ git libboost1.55 libevent-dev libssl-dev libtool make pkg-config</span><br><span class="line">tar -zxvf thrift-0.11.0.tar.gz</span><br><span class="line">cd thrift-0.11.0</span><br><span class="line">.&#x2F;configure --with-cpp --with-boost --with-python --without-csharp --with-java --without-erlang --without-perl --with-php --without-php_extension --without-ruby --without-haskell  --without-go</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">在Master中Hbase安装目录下的bin目录启动thrift服务：</span><br><span class="line">.&#x2F;hbase-daemon.sh start thrift</span><br></pre></td></tr></table></figure>
<h6 id="2-安装-happybase-包"><a href="#2-安装-happybase-包" class="headerlink" title="2.安装 happybase 包"></a>2.安装 happybase 包</h6><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">pip3 install happybase</span><br><span class="line">pip3 install thrift</span><br></pre></td></tr></table></figure>
<h6 id="3-操作"><a href="#3-操作" class="headerlink" title="3.操作"></a>3.操作</h6><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 连接</span></span><br><span class="line"><span class="keyword">import</span> happybase</span><br><span class="line">connection = happybase.Connection(ip=<span class="string">'ip'</span>,port=<span class="string">'port'</span>,autoconnect=<span class="literal">False</span>)</span><br><span class="line"><span class="comment"># 保持连接</span></span><br><span class="line">connection.open()</span><br><span class="line"><span class="comment"># 查看所有表</span></span><br><span class="line">tables = connection.tables()</span><br><span class="line">print(tables)</span><br><span class="line"><span class="comment"># 创建表</span></span><br><span class="line">connection.create_table(<span class="string">'SHOPEE_20201125'</span>, &#123;<span class="string">'info'</span>:&#123;<span class="string">'compression'</span>:<span class="string">'lz4'</span>&#125;&#125;)</span><br><span class="line"><span class="comment"># 删除表</span></span><br><span class="line">connection.disable_table(<span class="string">'hbase_table'</span>)</span><br><span class="line">connection.delete_table(<span class="string">'hbase_table'</span>)</span><br><span class="line"><span class="comment"># 连接</span></span><br><span class="line">table = connection.table(<span class="string">'hbase_table'</span>)</span><br><span class="line"><span class="comment"># 插入</span></span><br><span class="line">tab = table.batch()</span><br><span class="line">data_dict = &#123;<span class="string">"info:name"</span>: <span class="string">'Tom'</span>&#125;</span><br><span class="line">tab.put(<span class="string">'row_key'</span>,data_dict)</span><br><span class="line">tab.send()</span><br><span class="line"><span class="comment"># 关闭</span></span><br><span class="line">connection.close()</span><br></pre></td></tr></table></figure>
<h5 id="5-python批量部署docker"><a href="#5-python批量部署docker" class="headerlink" title="5.python批量部署docker"></a>5.python批量部署docker</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">BASE_DIR = os.path.dirname(os.path.abspath(__file__))</span><br><span class="line"></span><br><span class="line">logging.basicConfig(</span><br><span class="line">    format=<span class="string">"%(asctime)s - %(levelname)s: %(message)s"</span>,</span><br><span class="line">    filemode=<span class="string">"a"</span>,</span><br><span class="line">    level=logging.INFO</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SSHClient</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, hostname, port, username)</span>:</span></span><br><span class="line">        self.hostname = hostname</span><br><span class="line">        self.port = port</span><br><span class="line">        self.username = username</span><br><span class="line">        self.ssh = paramiko.SSHClient()</span><br><span class="line">        self.ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">        print(hostname, port, username)</span><br><span class="line">        self.ssh.connect(hostname=self.hostname, port=self.port, username=self.username, password=<span class="string">"password"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">connect</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.transport = paramiko.Transport((self.hostname, self.port))</span><br><span class="line">        self.transport.connect(username=self.username, pkey=self.pkey)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">command</span><span class="params">(self, cmd)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            stdin,stdout,stderr = self.ssh.exec_command(cmd)</span><br><span class="line">            readlines = stdout.readlines()</span><br><span class="line">            <span class="keyword">return</span> readlines</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">            print(err)</span><br><span class="line">            <span class="keyword">return</span> err</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">put</span><span class="params">(self, local_path, remote_path)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            sftp = paramiko.SFTPClient.from_transport(self.transport)</span><br><span class="line">            sftp.put(local_path, remote_path)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> err:</span><br><span class="line">            print(err)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.transport.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">   </span><br><span class="line">    hosts_1 = [<span class="string">"ip1"</span>,<span class="string">"ip2"</span>]</span><br><span class="line">    hosts_2 = [<span class="string">"ip1"</span>,<span class="string">"ip2"</span>]</span><br><span class="line"></span><br><span class="line">    port = <span class="number">22</span></span><br><span class="line">    username = <span class="string">"root"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">        project_num = input(<span class="string">"输入需要操作的表的1：test_project1:\n2:test_project2:\n"</span>)</span><br><span class="line">        host_num = input(<span class="string">"输入操作的的host列表\n1:hosts_1\n2:hosts_2\nhost:"</span>)</span><br><span class="line">        model = input(<span class="string">"输入模式:\nstop.停止\nstart.开启\nrestart.重启\ncreate.创建\nremove.删除\nmodel: "</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> project_num == <span class="string">'1'</span>:</span><br><span class="line">            project = <span class="string">"test_project1"</span></span><br><span class="line">        <span class="keyword">elif</span> project_num == <span class="string">'2'</span>:</span><br><span class="line">            project = <span class="string">"test_project2"</span></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> host_num == <span class="string">'1'</span>:</span><br><span class="line">            hosts = hosts_1</span><br><span class="line">        <span class="keyword">elif</span> host_num == <span class="string">"2"</span>:</span><br><span class="line">            hosts = hosts_2</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> model == <span class="string">"create"</span>:</span><br><span class="line">            <span class="keyword">for</span> hostname <span class="keyword">in</span> hosts:</span><br><span class="line">                logging.info(<span class="string">"进度：&#123;&#125; / &#123;&#125;"</span>.format(hosts.index(hostname) + <span class="number">1</span>, len(hosts)))</span><br><span class="line">                ssh = SSHClient(hostname=hostname, port=port, username=username)</span><br><span class="line">                print(<span class="string">"==========1"</span>)</span><br><span class="line">                logging.info(ssh.command(<span class="string">"cd /opt &amp;&amp; mkdir &#123;&#125; &amp;&amp; ls"</span>.format(project)))</span><br><span class="line">                print(<span class="string">"==========2"</span>)</span><br><span class="line">                logging.info(ssh.command(<span class="string">"cd /opt &amp;&amp; svn checkout svn://code..../&#123;0&#125; &#123;0&#125;/"</span>.format(project)))</span><br><span class="line">                <span class="comment"># logging.info(ssh.command("cd /opt &amp;&amp; svn up &#123;0&#125;/".format(project)))</span></span><br><span class="line">                print(<span class="string">"==========3"</span>)</span><br><span class="line">                logging.info(ssh.command(<span class="string">"cd /opt/&#123;&#125; &amp;&amp; chmod +x *.sh"</span>.format(project)))</span><br><span class="line">                print(<span class="string">"==========4"</span>)</span><br><span class="line">                logging.info(ssh.command(<span class="string">"cd /opt/&#123;&#125; &amp;&amp; ./docker-build.sh"</span>.format(project)))</span><br><span class="line">                print(<span class="string">"==========5"</span>)</span><br><span class="line">                logging.info(ssh.command(<span class="string">"cd /opt/&#123;&#125; &amp;&amp; ./spider.sh start"</span>.format(project)))</span><br><span class="line">        <span class="keyword">elif</span> model == <span class="string">"stop"</span>:</span><br><span class="line">            <span class="keyword">for</span> hostname <span class="keyword">in</span> hosts:</span><br><span class="line">                logging.info(<span class="string">"进度：&#123;&#125; / &#123;&#125;"</span>.format(hosts.index(hostname) + <span class="number">1</span>, len(hosts)))</span><br><span class="line">                ssh = SSHClient(hostname=hostname, port=port, username=username)</span><br><span class="line">                print(<span class="string">"==========关闭 &#123;&#125; docker"</span>.format(project))</span><br><span class="line">                logging.info(ssh.command(<span class="string">"cd /opt/&#123;&#125; &amp;&amp; chmod +x *.sh"</span>.format(project)))</span><br><span class="line">                print(<span class="string">"==========添加权限完成"</span>)</span><br><span class="line">                logging.info(ssh.command(<span class="string">"cd /opt/&#123;&#125; &amp;&amp; ./spider.sh stop"</span>.format(project)))</span><br><span class="line">                print(<span class="string">"==========关闭完成"</span>)</span><br><span class="line">        <span class="keyword">elif</span> model == <span class="string">"start"</span>:</span><br><span class="line">            <span class="keyword">for</span> hostname <span class="keyword">in</span> hosts:</span><br><span class="line">                logging.info(<span class="string">"进度：&#123;&#125; / &#123;&#125;"</span>.format(hosts.index(hostname) + <span class="number">1</span>, len(hosts)))</span><br><span class="line">                ssh = SSHClient(hostname=hostname, port=port, username=username)</span><br><span class="line">                print(<span class="string">"==========启动 &#123;&#125; docker"</span>.format(project))</span><br><span class="line">                logging.info(ssh.command(<span class="string">"cd /opt/&#123;&#125; &amp;&amp; chmod +x *.sh"</span>.format(project)))</span><br><span class="line">                print(<span class="string">"==========添加权限完成"</span>)</span><br><span class="line">                logging.info(ssh.command(<span class="string">"cd /opt/&#123;&#125; &amp;&amp; ./spider.sh start"</span>.format(project)))</span><br><span class="line">                print(<span class="string">"==========启动完成"</span>)</span><br><span class="line">        <span class="keyword">elif</span> model == <span class="string">"remove"</span>:</span><br><span class="line">            <span class="keyword">for</span> hostname <span class="keyword">in</span> hosts:</span><br><span class="line">                logging.info(<span class="string">"进度：&#123;&#125; / &#123;&#125;"</span>.format(hosts.index(hostname) + <span class="number">1</span>, len(hosts)))</span><br><span class="line">                ssh = SSHClient(hostname=hostname, port=port, username=username)</span><br><span class="line">                print(<span class="string">"==========更新代码，重启 &#123;&#125; docker"</span>.format(project))</span><br><span class="line">                logging.info(ssh.command(<span class="string">"cd /opt/&#123;&#125; &amp;&amp; chmod +x *.sh"</span>.format(project)))</span><br><span class="line">                print(<span class="string">"==========添加权限完成"</span>)</span><br><span class="line">                logging.info(ssh.command(<span class="string">"cd /opt/&#123;&#125; &amp;&amp; ./spider.sh stop"</span>.format(project)))</span><br><span class="line">                print(<span class="string">"==========关闭完成"</span>)</span><br><span class="line">                logging.info(ssh.command(<span class="string">"cd /opt/ &amp;&amp; rm -rf &#123;&#125;"</span>.format(project)))</span><br><span class="line">                print(<span class="string">"==========删除完成"</span>)</span><br><span class="line">        <span class="keyword">elif</span> model == <span class="string">"restart"</span>:</span><br><span class="line">            <span class="keyword">for</span> hostname <span class="keyword">in</span> hosts:</span><br><span class="line">                logging.info(<span class="string">"进度：&#123;&#125; / &#123;&#125;"</span>.format(hosts.index(hostname) + <span class="number">1</span>, len(hosts)))</span><br><span class="line">                ssh = SSHClient(hostname=hostname, port=port, username=username)</span><br><span class="line">                print(<span class="string">"==========重启 &#123;&#125; docker"</span>.format(project))</span><br><span class="line">                logging.info(ssh.command(<span class="string">"cd /opt/&#123;&#125; &amp;&amp; chmod +x *.sh"</span>.format(project)))</span><br><span class="line">                print(<span class="string">"==========添加权限完成"</span>)</span><br><span class="line">                logging.info(ssh.command(<span class="string">"cd /opt/&#123;&#125; &amp;&amp; ./spider.sh stop"</span>.format(project)))</span><br><span class="line">                print(<span class="string">"==========关闭完成"</span>)</span><br><span class="line">                logging.info(ssh.command(<span class="string">"cd /opt/&#123;&#125; &amp;&amp; ./spider.sh start"</span>.format(project)))</span><br><span class="line">                print(<span class="string">"==========开启完成"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"model "</span>, model, <span class="string">"模式错误"</span>)</span><br><span class="line">            <span class="keyword">for</span> hostname <span class="keyword">in</span> hosts:</span><br><span class="line">                logging.info(<span class="string">"进度：&#123;&#125; / &#123;&#125;"</span>.format(hosts.index(hostname) + <span class="number">1</span>, len(hosts)))</span><br><span class="line">                ssh = SSHClient(hostname=hostname, port=port, username=username)</span><br><span class="line">                logging.info(ssh.command(<span class="string">"docker ps"</span>.format(project)))</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac-redis</title>
    <url>/2020/08/16/Mac-redis/</url>
    <content><![CDATA[<p>1.安装redis: brew install redis</p>
<p>2.启动redis: redis-server</p>
<p>3.测试Redis：起个新的端口 redis-cli</p>
<p>4.Redis命令</p>
<p>普通命令</p>
<pre><code>查找键：keys [正则表达式]
查看全部键：keys *
判断键是否存在：exists key
查看键对应的值的类型：type key
删除键对应的值的类型：del key1 key2 key3...
设置键的过期时间：expire key seconds
查看键的有效时间：ttl key
</code></pre><p>string</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.设置,替换 set name tom</span><br><span class="line">2.查看 get name</span><br><span class="line">3.批量设置 mset name1 tom name2 jan name3 tony</span><br><span class="line">4.批量查找 mget name1 name2 name3</span><br><span class="line">5.setex name 5 tom # 5s 后过期，等价于 set+expire</span><br><span class="line">6.setnx name tom # 如果name不存在就执行set创建,name已存在就不执行</span><br><span class="line">7.value是整数可以 incr age 5 #比如age原来是30，现在就是已经是35了</span><br><span class="line">8.追加值 append name 1</span><br></pre></td></tr></table></figure>
<p>list</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.list左边插入数据 lpush books python java galang</span><br><span class="line">2.list右边插入数据 rpush books python java galang</span><br><span class="line">3.在指定元素前或后插入数据 linsert key before&#x2F;after 1 php</span><br><span class="line">4.查看长度 llen books</span><br><span class="line">5.队列(右边进左边出): lpop books</span><br><span class="line">6.栈(右边进右边出): rpop books</span><br><span class="line">7.查看全部 lrange books 0 -1</span><br><span class="line">8.索引查看 lindex books 1</span><br><span class="line">9.修改 lset books 1 rust</span><br><span class="line">10.切片,生成新的，多余去掉 ltrim books 1 -1 #区1到最后的值</span><br><span class="line">11.清空 ltrim books 1 0  # 这其实是清空了整个列表，因为区间范围长度为负</span><br><span class="line">12.删除 lrem key count value</span><br></pre></td></tr></table></figure>
<p>hash</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.设置 hset books java &quot;think in java&quot;</span><br><span class="line">2.批量设置 hmset books name java price 23</span><br><span class="line">3.获取属性 hkeys books</span><br><span class="line">4.获取属性的值 hvals books</span><br><span class="line">5.查看全部 hgetall books</span><br><span class="line">6.查看长度 hlen books</span><br><span class="line">7.查看一个 hget books java</span><br><span class="line">8.操作数值 hincrby tom age 1 # tom 的年纪又老了一岁</span><br></pre></td></tr></table></figure>
<p>set</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.设置 sadd books python</span><br><span class="line">2.查看 smembers books  # 注意顺序，和插入的并不一致，因为 set 是无序的</span><br><span class="line">3.查询某个value是否存在 sismember books java  # 又返回1，没有返回0</span><br><span class="line">4.查看长度 scard books</span><br><span class="line">5.弹出 spop books</span><br><span class="line">6.删除srem books python</span><br></pre></td></tr></table></figure>
<p>zset(有序集合)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.设置 zadd books 9.0 &quot;python book&quot;</span><br><span class="line">2.按score顺序列出 zrange books 0 -1</span><br><span class="line">3.按score逆序列出 zrevrange books 0 -1</span><br><span class="line">4.查看长度 zcard books</span><br><span class="line">5.查看获取指定value的score zscore books &quot;python book&quot;</span><br><span class="line">6.根据分值区间遍历  zrangebyscore books 0 8.91 | zrangebyscore books 0 8.91 withscore</span><br><span class="line">7.删除value zrem books &quot;python book&quot;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>git笔记</title>
    <url>/2020/05/03/git%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>1.执行初始化命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>
<p>2.管理目录下文件的状态 (注意：新增或者修改的文件会变红)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>
<p>3.提交缓、暂存区</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure>
<p>4.提交版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git commit -m &#39;描述信息&#39;</span><br></pre></td></tr></table></figure>
<p>5.查看日志</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure>
<p>6.回滚到之前版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log</span><br><span class="line">git reset --hard 版本号</span><br></pre></td></tr></table></figure>
<p>7.回滚到之后的版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git reflog</span><br><span class="line">git reset --hard 版本号</span><br></pre></td></tr></table></figure>
<p>8.查看分支</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure>
<p>9.创建分支</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch 分支名称</span><br></pre></td></tr></table></figure>
<p>10.切换分支</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git checkout 分支名称</span><br><span class="line">git checkout -b 新分支名称  创建并且切换分支</span><br></pre></td></tr></table></figure>
<p>11.分支合并</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git merge 要合并的分支名称</span><br></pre></td></tr></table></figure>
<p>12.删除分支</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git branch -d 分支名称</span><br></pre></td></tr></table></figure>
<p>13.给远程仓库起别名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git remote add origin 远程仓库</span><br></pre></td></tr></table></figure>
<p>14.克隆远程远程仓库代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone 远程代码地址（内部已实现 git remote add origin 远程仓库）</span><br></pre></td></tr></table></figure>
<p>15.像远程仓库推送代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git push -u origin 分支</span><br></pre></td></tr></table></figure>
<p>16.像远程拉最新代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git pull origin 分支</span><br><span class="line">等价于</span><br><span class="line">git fetch origin 分支</span><br><span class="line">git merge origin&#x2F;分支</span><br></pre></td></tr></table></figure>
<p>17.日志格式化设置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git log --graph --pretty&#x3D;format:&quot;%h %s&quot;</span><br></pre></td></tr></table></figure>
<p>18.tag</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git tag -a v1.0 -m &#39;版本介绍&#39;   创建本地tag信息</span><br><span class="line">git tag -d v1.0                删除tag</span><br><span class="line">git push origin --tag          将本地tag信息推送到远程仓库</span><br><span class="line">git pull origin --tag          更新本地tag版本信息</span><br><span class="line"></span><br><span class="line">git chechout v1.0              切换tag</span><br><span class="line">git clone -b v1.0              指定tag下载代码</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
</search>
